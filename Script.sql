/*
    AINDA EM DESENVOLVIMENTO.
*/

-- Criando sequencias 
CREATE SEQUENCE IF NOT EXISTS SEQ_CLIENTE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE IF NOT EXISTS SEQ_ANIMAL START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE IF NOT EXISTS SEQ_ESPECIE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE IF NOT EXISTS SEQ_ATENDIMENTO START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE IF NOT EXISTS SEQ_ATENDIMENTO_PRODUTO START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE IF NOT EXISTS SEQ_ATENDIMENTO_SERVICO START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE IF NOT EXISTS SEQ_SERVICO START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE IF NOT EXISTS SEQ_FUNCIONARIO START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE IF NOT EXISTS SEQ_CARGO START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE IF NOT EXISTS SEQ_PRODUTO START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE IF NOT EXISTS SEQ_CATEGORIA START WITH 1 INCREMENT BY 1;



-- Criando tabelas e seus relacionamentos (constraints).
CREATE TABLE IF NOT EXISTS TB_CLIENTE (
    ID BIGINT DEFAULT nextval('SEQ_CLIENTE'),
    NOME VARCHAR(100),
    CPF_CNPJ VARCHAR(30),
    EMAIL VARCHAR(100),
    TELEFONE VARCHAR(50),
    CONSTRAINT PK_CLIENTE PRIMARY KEY (ID)
);


CREATE TABLE IF NOT EXISTS TB_ESPECIE (
    ID BIGINT DEFAULT nextval('SEQ_ESPECIE'),
    NOME VARCHAR(100),
    DESCRICAO VARCHAR(400),
    CONSTRAINT PK_ESPECIE PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS TB_CARGO (
    ID BIGINT DEFAULT nextval('SEQ_CARGO'),
    NOME VARCHAR(100),
    DESCRICAO VARCHAR(400),
    CONSTRAINT PK_CARGO PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS TB_CATEGORIA (
    ID BIGINT DEFAULT nextval('SEQ_CATEGORIA'),
    NOME VARCHAR(100),
    DESCRICAO VARCHAR(400),
    CONSTRAINT PK_CATEGORIA PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS TB_ANIMAL (
    ID BIGINT DEFAULT nextval('SEQ_ANIMAL'),
    NOME VARCHAR(50),
    DATA_NASCIMENTO DATE,
    PESO FLOAT,
    FK_CLIENTE BIGINT NOT NULL,
    FK_ESPECIE BIGINT NOT NULL,
    CONSTRAINT PK_ANIMAL PRIMARY KEY (ID),
    CONSTRAINT FK_ANIMAL_CLIENTE FOREIGN KEY (FK_CLIENTE) REFERENCES PETSHOP.TB_CLIENTE (ID),
    CONSTRAINT FK_ANIMAL_ESPECIE FOREIGN KEY (FK_ESPECIE) REFERENCES PETSHOP.TB_ESPECIE (ID)
);

CREATE TABLE IF NOT EXISTS TB_PRODUTO (
    ID BIGINT DEFAULT nextval('SEQ_PRODUTO'),
    NOME VARCHAR(100),
    DESCRICAO VARCHAR(400),
    FK_CATEGORIA BIGINT NOT NULL,
    CONSTRAINT PK_PRODUTO PRIMARY KEY (ID),
    CONSTRAINT FK_PRODUTO_CATEGORIA FOREIGN KEY (FK_CATEGORIA) REFERENCES PETSHOP.TB_CATEGORIA (ID)
);

CREATE TABLE IF NOT EXISTS TB_FUNCIONARIO (
    ID BIGINT DEFAULT nextval('SEQ_FUNCIONARIO'),
    NOME VARCHAR(100),
    EMAIL VARCHAR(100),
    TELEFONE VARCHAR(20),
    FK_CARGO BIGINT,
    CONSTRAINT PK_FUNCIONARIO PRIMARY KEY (ID),
    CONSTRAINT FK_FUNCIONARIO_CARGO FOREIGN KEY (FK_CARGO) REFERENCES TB_CARGO (ID)
);

CREATE TABLE IF NOT EXISTS TB_SERVICO (
    ID BIGINT DEFAULT nextval('SEQ_SERVICO'),
    NOME VARCHAR(100) NOT NULL,
    DESCRICAO VARCHAR(200),
    CONSTRAINT PK_SERVICO PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS TB_ATENDIMENTO (
    ID BIGINT DEFAULT nextval('SEQ_ATENDIMENTO'),
    DATAHORA_INICIO DATE,
    DATAHORA_FIM DATE,
    FK_PET BIGINT,
    FK_FUNCIONARIO BIGINT,
    CONSTRAINT PK_ATENDIMENTO PRIMARY KEY (ID),
    CONSTRAINT FK_ATENDIMENTO_PET FOREIGN KEY (FK_PET) REFERENCES publicC.TB_ANIMAL (ID),
    CONSTRAINT FK_ATENDIMENTO_FUNCIONARIO FOREIGN KEY (FK_FUNCIONARIO) REFERENCES public.TB_FUNCIONARIO (ID)
);

CREATE TABLE IF NOT EXISTS TB_ATENDIMENTO_PRODUTO (
    ID BIGINT DEFAULT nextval('SEQ_ATENDIMENTO_PRODUTO'),
    FK_ATENDIMENTO BIGINT,
    FK_PRODUTO BIGINT,
    CONSTRAINT PK_ATENDIMENTO_PRODUTO PRIMARY KEY (ID),
    CONSTRAINT FK_ATEND_PROD_ATENDIMENTO FOREIGN KEY (FK_ATENDIMENTO) REFERENCES publicTB_ATENDIMENTO (ID),
    CONSTRAINT FK_ATEND_PROD_PRODUTO FOREIGN KEY (FK_PRODUTO) REFERENCES publicTB_PRODUTO (ID)
);

CREATE TABLE IF NOT EXISTS TB_ATENDIMENTO_SERVICO (
    ID BIGINT DEFAULT nextval('SEQ_ATENDIMENTO_SERVICO'),
    FK_ATENDIMENTO BIGINT,
    FK_SERVICO BIGINT,
    CONSTRAINT PK_ATENDIMENTO_SERVICO PRIMARY KEY (ID),
    CONSTRAINT FK_ATEND_SERV_ATENDIMENTO FOREIGN KEY (FK_ATENDIMENTO) REFERENCES publicTB_ATENDIMENTO (ID),
    CONSTRAINT FK_ATEND_SERV_SERVICO FOREIGN KEY (FK_SERVICO) REFERENCES publicTB_SERVICO (ID)
);


COMMIT;